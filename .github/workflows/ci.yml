name: CI
on:
  push:
    branches:
      - master
  pull_request: null
  release:
    types:
      - published
env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  cargo-clippy:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v1
      - name: Check Clippy Linter
        run: cargo clippy --locked --all-features --all-targets -- -D warnings
  cargo-fmt-check:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Check Formatting
        run: cargo fmt --all -- --check
  cargo-test-workspace:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: cargo test --locked --workspace
  lint-toml-files:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Cargo.toml linter
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-toml-lint
          version: "0.1"
      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint
      - name: Notify if Job Fails
        uses: ravsamhq/notify-slack-action@v1
        if: always() && github.ref == 'refs/heads/master'
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> :
            <{run_url}|View Run Results>"
          footer: ""
          notify_when: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NOTIFY_BUILD }}
  pre-publish-check:
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Verify tag version
        run: >
          cargo install toml-cli

          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} forc-plugins/releasy-emit/Cargo.toml

          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} forc-plugins/releasy-core/Cargo.toml

          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} forc-plugins/releasy-graph/Cargo.toml
      - name: Notify if Job Fails
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> :
            <{run_url}|View Run Results>"
          footer: ""
          notify_when: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NOTIFY_BUILD }}
  publish:
    needs:
      - cargo-clippy
      - cargo-fmt-check
      - cargo-test-workspace
      - lint-toml-files pre-publish-check
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Publish crate
        uses: katyo/publish-crates@v2
        with:
          publish-delay: 30000
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Notify if Job Fails
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> :
            <{run_url}|View Run Results>"
          footer: ""
          notify_when: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NOTIFY_BUILD }}

